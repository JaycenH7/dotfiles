#!/bin/sh

# finish writing help section

DOT_DIR="$HOME/git/dotfiles"

print_help() {
  echo 'print help section here'
  echo '(to be written)'
  exit 0
}

print_error() {
  local prog=$(basename $0)
  echo -e "$prog:ERROR: $*">&2
  exit 1
}

sync_dotfiles() {
  if git submodule status | grep -q "^-" ; then
    print_error "submodules need to be initialized (dotsync -c)"
  fi
  case $1 in
    vim)  sync_files=".vimrc .vim"
    ;;
    tmux) sync_files=".tmux.conf .tmux"
    ;;
    zsh)  sync_files=".zshrc .zshenv .zprofile"
    ;;
    all)  sync_files=".vimrc .vim .tmux.conf .tmux \
                      .zshrc .zshenv .zprofile"
    ;;
    *) print_help
  esac

  for file in $sync_files; do
    rsync -a --delete \
      "$DOT_DIR/$file" "$HOME"
  done
}

clone_submodules() {
  git submodule update --init
}

pull_updates() {
  git pull
  git submodule update --recursive
}

check_argument() {
  if [ "$SYNC" = "TRUE" ] ; then
    sync_dotfiles "$FILE"
  else
    print_help
  fi
}

[ $# -eq 0 -o $# -gt 2 ] && print_help

cd "$DOT_DIR"
while [ $# -gt 0 ] ; do
  case $1 in
    -s|--sync)   SYNC=TRUE
    ;;
    -u|--update) pull_updates
    ;;
    -c|--clone) clone_submodules
    ;;
    -h|--help) print_help
    ;;
    *) FILE="$1"
    ;;
  esac
  shift
done

check_argument
